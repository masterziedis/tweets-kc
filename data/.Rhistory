install.packages("rmarkdown")
install.packages("plyr")
install.packages("RODBC")
install.packages("ggplot2")
install.packages(c("maptools", "stringr", "scales", "RColorBrewer"))
install.packages(c("kjhutils", "pander"))
###--------------------------------------------------
cls
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
install.packages("dplyr")
install.packages(c("tidyr", "car", "corrplot", "ape"))
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
`02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(`02.select.data`)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
>   View(`02.select.data`)
mobidata <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(mobidata)
library(RPostgreSQL)
install.packages("RPostgreSQL")
require("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(dbDriver('PostgreSQL'), user = 'postgres',
+ password = 'tcxgq7uu', dbname = 'LochNess')
con <- dbConnect(drv, dbname = "LochNess",
host = "localhost", port = 5432,
user = "postgres", password = tcxgq7uu)
install.packages("xlsx")
install.packages("RODBC")
drv <- dbDriver("PostgreSQL")
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="LochNess")
con <- dbConnect(drv, dbname="LochNess", user='postgres', password='tcxgq7uu')
library ('hflights')
install.packages("hflights")
library ('hflights')
write.csv(hflights, 'hflights.csv, row.names=false)
write.csv(hflights, 'hflights.csv', row.names= FALSE)
str(hflights)
system.time(read.csv('hfligths.csv'))
system.time(read.csv('hflights.csv'))
boxplot(res, xlab = '')
boxplot(res, xlab = '') + main = expression(paste('Benchmarking', italic('read.table'))))
install.packages("riverplot")
install.packages("networkD3")
install.packages("rCharts")
install.packages("googleVis")
install.packages("choroplethr")
install.packages("rgeos")
install.packages("plyr")
install.packages("ggplot2")
install.packages("maptools")
fbemplid <- read.csv("D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv")
fbemplid <- read.csv(D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv)
fbemplid <- read.csv(D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
fbemplid <- read.csv("D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
library(plyr)
colwise(class)(emplid20160127)
install.packages("gpclib")
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readShapeSpatial")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readOGR")
install.packages("rgdal")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
library("ggplot2")
library("gpclib")
install.packages("gpclib")
library("gpclib")
library("maptools")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
plot(map)
###--------------------------------------------------
library(ggplot2)
library(scales)
library(dplyr)
library(rvest)
library(stringr)
library(car)
library(rgeos)
library(maptools)
library(rgdal)
install.packages('reshape2')
install.packages("choroplethrAdmin1")
library(choroplethrAdmin1)
library(ggplot2)
library(choroplethrAdmin1)
library(ggplot2)
data(admin1.map)
ggplot(admin1.map, aes(long, lat, group=group)) +
geom_polygon()
admin1_map("belgium")
setwd("~/OneDrive/Vault/Vlaamse Overheid/Data Science/tweets-kc/data")
tweets <- read.csv("tweets.csv", stringsAsFactors = FALSE)
library(syuzhet)
library(lubridate)
library(ggplot2)
library(scales)
library(reshape2)
library(dplyr )
mySentiment <- get_nrc_sentiment(tweets$text)
get_nrc_sentiment("Resistance is futile")
get_nrc_sentiment("fuck off you stupid asshole")
get_nrc_sentiment("Jouw kapsel, voor zover dat nog een kapsel mocht worden genoemd, had veel weg van zo'n in die dagen in zwang rakende ecologische tuin, waarin elke menselijke ingreep als een misdaad tegen de natuur werd beschouwd")
head(mySentiment)
sentimentTotals <- data.frame(colSums(tweets[,c(11:18)]))
names(sentimentTotals) <- "count"
sentimentTotals <- cbind("sentiment" = rownames(sentimentTotals), sentimentTotals)
rownames(sentimentTotals) <- NULL
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment")
tweets <- cbind(tweets, mySentiment)
sentimentTotals <- data.frame(colSums(tweets[,c(11:18)]))
names(sentimentTotals) <- "count"
sentimentTotals <- cbind("sentiment" = rownames(sentimentTotals), sentimentTotals)
rownames(sentimentTotals) <- NULL
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment")
tweets$timestamp <- with_tz(ymd_hms(tweets$timestamp), "Europe/Brussels")
posnegtime <- tweets %>%
group_by(timestamp = cut(timestamp, breaks="2 months")) %>%
summarise(negatief = mean(negative),
positief = mean(positive)) %>% melt
names(posnegtime) <- c("timestamp", "sentiment", "meanvalue")
posnegtime$sentiment = factor(posnegtime$sentiment,levels(posnegtime$sentiment)[c(2,1)])
names(sentimentTotals) <- "count"
ggplot(data = posnegtime, aes(x = as.Date(timestamp), y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
scale_colour_manual(values = c("springgreen4", "firebrick3")) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
scale_x_date(breaks = date_breaks("10 months"),
labels = date_format("%Y-%b")) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment over de jaren")
tweets$weekday <- wday(tweets$timestamp, label = TRUE)
weeklysentiment <- tweets %>% group_by(weekday) %>%
summarise(anger = mean(anger),
anticipation = mean(anticipation),
disgust = mean(disgust),
fear = mean(fear),
joy = mean(joy),
sadness = mean(sadness),
surprise = mean(surprise),
trust = mean(trust)) %>% melt
names(weeklysentiment) <- c("weekday", "sentiment", "meanvalue")
ggplot(data = weeklysentiment, aes(x = weekday, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, 0.6) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment volgens weekdag")
## Correlation months and feelings?
tweets$month <- month(tweets$timestamp, label = TRUE)
monthlysentiment <- tweets %>% group_by(month) %>%
summarise(anger = mean(anger),
anticipation = mean(anticipation),
disgust = mean(disgust),
fear = mean(fear),
joy = mean(joy),
sadness = mean(sadness),
surprise = mean(surprise),
trust = mean(trust)) %>% melt
names(monthlysentiment) <- c("month", "sentiment", "meanvalue")
ggplot(data = monthlysentiment, aes(x = month, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment doorheen het jaar")
