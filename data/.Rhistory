install.packages("rmarkdown")
install.packages("plyr")
install.packages("RODBC")
install.packages("ggplot2")
install.packages(c("maptools", "stringr", "scales", "RColorBrewer"))
install.packages(c("kjhutils", "pander"))
###--------------------------------------------------
cls
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
install.packages("dplyr")
install.packages(c("tidyr", "car", "corrplot", "ape"))
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
`02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(`02.select.data`)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
>   View(`02.select.data`)
mobidata <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(mobidata)
library(RPostgreSQL)
install.packages("RPostgreSQL")
require("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(dbDriver('PostgreSQL'), user = 'postgres',
+ password = 'tcxgq7uu', dbname = 'LochNess')
con <- dbConnect(drv, dbname = "LochNess",
host = "localhost", port = 5432,
user = "postgres", password = tcxgq7uu)
install.packages("xlsx")
install.packages("RODBC")
drv <- dbDriver("PostgreSQL")
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="LochNess")
con <- dbConnect(drv, dbname="LochNess", user='postgres', password='tcxgq7uu')
library ('hflights')
install.packages("hflights")
library ('hflights')
write.csv(hflights, 'hflights.csv, row.names=false)
write.csv(hflights, 'hflights.csv', row.names= FALSE)
str(hflights)
system.time(read.csv('hfligths.csv'))
system.time(read.csv('hflights.csv'))
boxplot(res, xlab = '')
boxplot(res, xlab = '') + main = expression(paste('Benchmarking', italic('read.table'))))
install.packages("riverplot")
install.packages("networkD3")
install.packages("rCharts")
install.packages("googleVis")
install.packages("choroplethr")
install.packages("rgeos")
install.packages("plyr")
install.packages("ggplot2")
install.packages("maptools")
fbemplid <- read.csv("D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv")
fbemplid <- read.csv(D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv)
fbemplid <- read.csv(D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
fbemplid <- read.csv("D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
library(plyr)
colwise(class)(emplid20160127)
install.packages("gpclib")
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readShapeSpatial")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readOGR")
install.packages("rgdal")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
library("ggplot2")
library("gpclib")
install.packages("gpclib")
library("gpclib")
library("maptools")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
plot(map)
###--------------------------------------------------
library(ggplot2)
library(scales)
library(dplyr)
library(rvest)
library(stringr)
library(car)
library(rgeos)
library(maptools)
library(rgdal)
library(ggplot2)
library(lubridate)
library(scales)
setwd("~/OneDrive/Vault/Vlaamse Overheid/Data Science/tweets-kc/data")
tweets <- read.csv("tweets.csv", stringsAsFactors = FALSE)
tweets$timestamp <- ymd_hms(tweets$timestamp)
tweets$timestamp <- with_tz(tweets$timestamp, "Europe/Brussels")
ggplot(data = tweets, aes(x = timestamp)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Jaar") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = tweets, aes(x = year(timestamp))) +
geom_histogram(breaks = seq(2007.5, 2015.5, by =1), aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Jaar") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = tweets, aes(x = wday(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Dag van de Week") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
chisq.test(table(wday(tweets$timestamp, label = TRUE)))
ggplot(data = tweets, aes(x = month(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Maand") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
class(tweets$timeonly) <- "POSIXct"
ggplot(data = tweets, aes(x = timeonly)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") +
scale_x_datetime(breaks = date_breaks("3 hours"),
labels = date_format("%H:00")) +
scale_fill_gradient(low = "lightgray", high = "black")
class(tweets$timeonly) <- "POSIXct"
ggplot(data = tweets, aes(x = timeonly)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") +
scale_x_datetime(breaks = date_breaks("3 hours"),
labels = date_format("%H:00")) +
scale_fill_gradient(low = "lightgray", high = "black")
tweets$timeonly <- as.numeric(tweets$timestamp - trunc(tweets$timestamp, "days"))
tweets[(minute(tweets$timestamp) == 0 & second(tweets$timestamp) == 0),11] <- NA
mean(is.na(tweets$timeonly))
class(tweets$timeonly) <- "POSIXct"
ggplot(data = tweets, aes(x = timeonly)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") +
scale_x_datetime(breaks = date_breaks("3 hours"),
labels = date_format("%H:00")) +
scale_fill_gradient(low = "lightgray", high = "black")
latenighttweets <- tweets[(hour(tweets$timestamp) < 6),]
ggplot(data = latenighttweets, aes(x = timestamp)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") + ggtitle("Late Night Tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(tweets, aes(factor(grepl("#", tweets$text)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Number of tweets") +
ggtitle("Tweets with Hashtags") +
scale_x_discrete(labels=c("No hashtags", "Tweets with hashtags"))
ggplot(tweets, aes(factor(grepl("#", tweets$text)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Tweets met Hashtags") +
scale_x_discrete(labels=c("Zonder #", "Met #"))
ggplot(tweets, aes(factor(!is.na(retweeted_status_id)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Retweeted Tweets") +
scale_x_discrete(labels=c("Tweet", "Tweettweet"))
ggplot(tweets, aes(factor(!is.na(in_reply_to_status_id)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Replied Tweets") +
scale_x_discrete(labels=c("Geen reply", "Replied tweets"))
tweets$type <- "tweet"
tweets[(!is.na(tweets$retweeted_status_id)),12] <- "RT"
tweets[(!is.na(tweets$in_reply_to_status_id)),12] <- "reply"
tweets$type <- as.factor(tweets$type)
tweets$type = factor(tweets$type,levels(tweets$type)[c(3,1,2)])
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("midnightblue", "deepskyblue4", "aquamarine3"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("lightgray", "darkgray", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("white", "darkgray", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("gray", "darkgray", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("midnightblue", "deepskyblue4", "aquamarine3"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("yellow", "orange", "red"))
tweets$charsintweet <- sapply(tweets$text, function(x) nchar(x))
ggplot(data = tweets, aes(x = charsintweet)) +
geom_histogram(aes(fill = ..count..), binwidth = 8) +
theme(legend.position = "none") +
xlab("Tekens per Tweet") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
tweets[(tweets$charsintweet > 140),]
tweets[(tweets$tweet_id == 5.733451e+16 ),'text']
tweets[(tweets$retweeted_status_user_id == 1598644159 ),'text']
tweets[(tweets$retweeted_status_user_id == 1598644159),'text']
