install.packages("rmarkdown")
install.packages("plyr")
install.packages("RODBC")
install.packages("ggplot2")
install.packages(c("maptools", "stringr", "scales", "RColorBrewer"))
install.packages(c("kjhutils", "pander"))
###--------------------------------------------------
cls
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
install.packages("dplyr")
install.packages(c("tidyr", "car", "corrplot", "ape"))
library(ggplot2)
library(scales)
library(dplyr)
library(tidyr)
library(stringr)
library(networkD3)
library(car)
library(corrplot)
library(ape)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
`02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(`02.select.data`)
02.select.data` <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
>   View(`02.select.data`)
mobidata <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Projecten/R DataViz Projects/vlimpers-mobiliteit/data/02-select-data.csv", sep=";")
View(mobidata)
library(RPostgreSQL)
install.packages("RPostgreSQL")
require("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(dbDriver('PostgreSQL'), user = 'postgres',
+ password = 'tcxgq7uu', dbname = 'LochNess')
con <- dbConnect(drv, dbname = "LochNess",
host = "localhost", port = 5432,
user = "postgres", password = tcxgq7uu)
install.packages("xlsx")
install.packages("RODBC")
drv <- dbDriver("PostgreSQL")
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="LochNess")
con <- dbConnect(drv, dbname="LochNess", user='postgres', password='tcxgq7uu')
library ('hflights')
install.packages("hflights")
library ('hflights')
write.csv(hflights, 'hflights.csv, row.names=false)
write.csv(hflights, 'hflights.csv', row.names= FALSE)
str(hflights)
system.time(read.csv('hfligths.csv'))
system.time(read.csv('hflights.csv'))
boxplot(res, xlab = '')
boxplot(res, xlab = '') + main = expression(paste('Benchmarking', italic('read.table'))))
install.packages("riverplot")
install.packages("networkD3")
install.packages("rCharts")
install.packages("googleVis")
install.packages("choroplethr")
install.packages("rgeos")
install.packages("plyr")
install.packages("ggplot2")
install.packages("maptools")
fbemplid <- read.csv("D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv")
fbemplid <- read.csv(D:\Users\colpaeko\Documents\OneDrive\Vault\Vlaamse Overheid\Data Science\vlimpers-geo\data\emplid20160127.csv)
fbemplid <- read.csv(D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
fbemplid <- read.csv("D:/Users/colpaeko/Documents/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv)
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
library(plyr)
colwise(class)(emplid20160127)
install.packages("gpclib")
emplid20160127 <- read.csv("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/emplid20160127.csv", sep=";")
View(emplid20160127)
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readShapeSpatial")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
install.packages("readOGR")
install.packages("rgdal")
map <- readOGR("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
library("ggplot2")
library("gpclib")
install.packages("gpclib")
library("gpclib")
library("maptools")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
map <- readShapeSpatial("~/OneDrive/Vault/Vlaamse Overheid/Data Science/vlimpers-geo/data/fedlanp010g.shp")
plot(map)
###--------------------------------------------------
library(ggplot2)
library(scales)
library(dplyr)
library(rvest)
library(stringr)
library(car)
library(rgeos)
library(maptools)
library(rgdal)
library(tm)
install.packages("tm")
library(stringr)
library(wordcloud)
install.packages("wordcloud")
library(tm)
library(stringr)
library(wordcloud)
setwd("~/OneDrive/Vault/Vlaamse Overheid/Data Science/tweets-kc/data")
tweets <- read.csv("tweets.csv", stringsAsFactors = FALSE)
nohandles <- str_replace_all(tweets$text, "@\\w+", "")
wordCorpus <- Corpus(VectorSource(nohandles))
wordCorpus <- tm_map(wordCorpus, removePunctuation)
wordCorpus <- tm_map(wordCorpus, content_transformer(tolower))
wordCorpus <- tm_map(wordCorpus, removeWords, stopwords("english"))
wordCorpus <- tm_map(wordCorpus, removeWords, stopwords("dutch"))
wordCorpus <- tm_map(wordCorpus, stripWhitespace)
pal <- brewer.pal(9,"YlGnBu")
pal <- pal[-(1:4)]
set.seed(123)
wordcloud(words = wordCorpus, scale=c(5,0.1), max.words=100, random.order=FALSE,
rot.per=0.35, use.r.layout=FALSE, colors=pal)
pal <- brewer.pal(9,"Greys")
pal <- pal[-(1:4)]
set.seed(123)
wordcloud(words = wordCorpus, scale=c(5,0.1), max.words=100, random.order=FALSE,
rot.per=0.35, use.r.layout=FALSE, colors=pal)
tdm <- TermDocumentMatrix(wordCorpus)
tdm
inspect(tdm[12880:12890, 270:280])
friends <- str_extract_all(tweets$text, "@\\w+")
namesCorpus <- Corpus(VectorSource(friends))
set.seed(146)
wordcloud(words = namesCorpus, scale=c(3,0.5), max.words=40, random.order=FALSE,
rot.per=0.10, use.r.layout=FALSE, colors=pal)
library(syuzhet)
install.packages("syuzhet")
library(lubridate)
library(ggplot2)
library(scales)
library(reshape2)
library(dplyr )
mySentiment <- get_nrc_sentiment(tweets$text)
library(syuzhet)
mySentiment <- get_nrc_sentiment(tweets$text)
get_nrc_sentiment("Resistance is futile")
get_nrc_sentiment("Jouw kapsel, voor zover dat nog een kapsel mocht worden genoemd, had veel weg van zo'n in die dagen in zwang rakende ecologische tuin, waarin elke menselijke ingreep als een misdaad tegen de natuur werd beschouwd")
head(mySentiment)
tweets <- cbind(tweets, mySentiment)
sentimentTotals <- data.frame(colSums(tweets[,c(11:18)]))
names(sentimentTotals) <- "count"
sentimentTotals <- cbind("sentiment" = rownames(sentimentTotals), sentimentTotals)
rownames(sentimentTotals) <- NULL
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Total Count") + ggtitle("Total Sentiment Score for All Tweets")
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment")
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment") +
geom_bar(fill = "darkgray")
ggplot(data = sentimentTotals, aes(x = sentiment, y = count)) +
geom_bar(aes(fill = sentiment), stat = "identity") +
theme(legend.position = "none") +
xlab("Sentiment") + ylab("Aantal") + ggtitle("Tweets volgens sentiment")
tweets$timestamp <- with_tz(ymd_hms(tweets$timestamp), "Europe/Brussels")
posnegtime <- tweets %>%
group_by(timestamp = cut(timestamp, breaks="2 months")) %>%
summarise(negative = mean(negative),
positive = mean(positive)) %>% melt
names(posnegtime) <- c("timestamp", "sentiment", "meanvalue")
posnegtime$sentiment = factor(posnegtime$sentiment,levels(posnegtime$sentiment)[c(2,1)])
ggplot(data = posnegtime, aes(x = as.Date(timestamp), y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
scale_colour_manual(values = c("springgreen4", "firebrick3")) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
scale_x_date(breaks = date_breaks("9 months"),
labels = date_format("%Y-%b")) +
ylab("Average sentiment score") +
ggtitle("Sentiment Over Time")
posnegtime <- tweets %>%
group_by(timestamp = cut(timestamp, breaks="2 months")) %>%
summarise(negatief = mean(negative),
positive = mean(positive)) %>% melt
names(posnegtime) <- c("timestamp", "sentiment", "meanvalue")
posnegtime$sentiment = factor(posnegtime$sentiment,levels(posnegtime$sentiment)[c(2,1)])
ggplot(data = posnegtime, aes(x = as.Date(timestamp), y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
scale_colour_manual(values = c("springgreen4", "firebrick3")) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
scale_x_date(breaks = date_breaks("9 months"),
labels = date_format("%Y-%b")) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment over de jaren")
posnegtime <- tweets %>%
group_by(timestamp = cut(timestamp, breaks="2 months")) %>%
summarise(negatief = mean(negative),
positief = mean(positive)) %>% melt
names(posnegtime) <- c("timestamp", "sentiment", "meanvalue")
posnegtime$sentiment = factor(posnegtime$sentiment,levels(posnegtime$sentiment)[c(2,1)])
ggplot(data = posnegtime, aes(x = as.Date(timestamp), y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
scale_colour_manual(values = c("springgreen4", "firebrick3")) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
scale_x_date(breaks = date_breaks("9 months"),
labels = date_format("%Y-%b")) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment over de jaren")
ggplot(data = posnegtime, aes(x = as.Date(timestamp), y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
scale_colour_manual(values = c("springgreen4", "firebrick3")) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
scale_x_date(breaks = date_breaks("10 months"),
labels = date_format("%Y-%b")) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment over de jaren")
tweets$weekday <- wday(tweets$timestamp, label = TRUE)
weeklysentiment <- tweets %>% group_by(weekday) %>%
summarise(anger = mean(anger),
anticipation = mean(anticipation),
disgust = mean(disgust),
fear = mean(fear),
joy = mean(joy),
sadness = mean(sadness),
surprise = mean(surprise),
trust = mean(trust)) %>% melt
names(weeklysentiment) <- c("weekday", "sentiment", "meanvalue")
ggplot(data = weeklysentiment, aes(x = weekday, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, 0.6) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Average sentiment score") +
ggtitle("Sentiment During the Week")
ggplot(data = weeklysentiment, aes(x = weekday, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, 0.6) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment volgens weekdag")
tweets$month <- month(tweets$timestamp, label = TRUE)
monthlysentiment <- tweets %>% group_by(month) %>%
summarise(anger = mean(anger),
anticipation = mean(anticipation),
disgust = mean(disgust),
fear = mean(fear),
joy = mean(joy),
sadness = mean(sadness),
surprise = mean(surprise),
trust = mean(trust)) %>% melt
names(monthlysentiment) <- c("month", "sentiment", "meanvalue")
ggplot(data = monthlysentiment, aes(x = month, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Average sentiment score") +
ggtitle("Sentiment During the Year")
ggplot(data = monthlysentiment, aes(x = month, y = meanvalue, group = sentiment)) +
geom_line(size = 2.5, alpha = 0.7, aes(color = sentiment)) +
geom_point(size = 0.5) +
ylim(0, NA) +
theme(legend.title=element_blank(), axis.title.x = element_blank()) +
ylab("Gemiddelde sentimentele score") +
ggtitle("Sentiment doorheen het jaar")
library(ggplot2)
library(lubridate)
library(scales)
setwd("~/OneDrive/Vault/Vlaamse Overheid/Data Science/tweets-kc/data")
tweets <- read.csv("tweets.csv", stringsAsFactors = FALSE)
tweets$timestamp <- ymd_hms(tweets$timestamp)
tweets$timestamp <- with_tz(tweets$timestamp, "Europe/Brussels")
ggplot(data = tweets, aes(x = timestamp)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Jaar") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = tweets, aes(x = year(timestamp))) +
geom_histogram(breaks = seq(2007.5, 2015.5, by =1), aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Jaar") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = tweets, aes(x = wday(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Dag van de Week") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(data = tweets, aes(x = month(timestamp, label = TRUE))) +
geom_bar(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Maand") + ylab("Aantal tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
tweets$timeonly <- as.numeric(tweets$timestamp - trunc(tweets$timestamp, "days"))
tweets[(minute(tweets$timestamp) == 0 & second(tweets$timestamp) == 0),11] <- NA
mean(is.na(tweets$timeonly))
class(tweets$timeonly) <- "POSIXct"
ggplot(data = tweets, aes(x = timeonly)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") +
scale_x_datetime(breaks = date_breaks("3 hours"),
labels = date_format("%H:00")) +
scale_fill_gradient(low = "lightgray", high = "black")
latenighttweets <- tweets[(hour(tweets$timestamp) < 6),]
ggplot(data = latenighttweets, aes(x = timestamp)) +
geom_histogram(aes(fill = ..count..)) +
theme(legend.position = "none") +
xlab("Tijdstip") + ylab("Aantal tweets") + ggtitle("Late Night Tweets") +
scale_fill_gradient(low = "lightgray", high = "black")
ggplot(tweets, aes(factor(grepl("#", tweets$text)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Tweets met Hashtags") +
scale_x_discrete(labels=c("Zonder #", "Met #"))
ggplot(tweets, aes(factor(!is.na(retweeted_status_id)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Retweeted Tweets") +
scale_x_discrete(labels=c("Tweet", "Tweettweet"))
ggplot(tweets, aes(factor(!is.na(in_reply_to_status_id)))) +
geom_bar(fill = "darkgray") +
theme(legend.position="none", axis.title.x = element_blank()) +
ylab("Aantal tweets") +
ggtitle("Replied Tweets") +
scale_x_discrete(labels=c("Geen reply", "Replied tweets"))
tweets$type <- "tweet"
tweets[(!is.na(tweets$retweeted_status_id)),12] <- "RT"
tweets[(!is.na(tweets$in_reply_to_status_id)),12] <- "reply"
tweets$type <- as.factor(tweets$type)
tweets$type = factor(tweets$type,levels(tweets$type)[c(3,1,2)])
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("yellow", "orange", "red"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("lightgray", "darkgrey", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("gray", "darkgrey", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("white", "darkgrey", "black"))
ggplot(data = tweets, aes(x = timestamp, fill = type)) +
geom_histogram() +
xlab("Time") + ylab("Number of tweets") +
scale_fill_manual(values = c("#e5ffff", "darkgrey", "black"))
